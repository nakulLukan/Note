@page "/home"
@page "/"
@using Note.Interfaces
@inject IDataService  DataService
@inject IJSRuntime JSRuntime;

<div class="container-fluid">
    <div class="row">
        <div class="col-12 bg-dark text-white p-2 text-center">
            <input type="text"
                   @bind-value="@ThreadTitle"
                   @onfocusin="TextChangeEvent"
                   class="mx-auto my-auto input-new-note-abstract"
                   placeholder="Create your note here...." />

        </div>
        <div class="col-12 bg-light corner-radius m-3 h-100">
            <label hidden="@HasThreads">No Threads</label>
        </div>
    </div>
</div>
<div class="container">

    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
        Open modal
    </button>

    <!-- The Modal -->
    <div class="modal fade" id="myModal">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Modal Heading</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    Modal body..
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>

            </div>
        </div>
    </div>
</div>

@code{

    [Parameter]
    public bool HasThreads { get; set; } = false;

    public string ThreadTitle { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var threads = await DataService.GetLastNThreads();
        if (threads.Any())
        {
            HasThreads = true;
        }

    }

    public void TextChangeEvent()
    {

    }
}

